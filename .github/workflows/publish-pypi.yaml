# .github/workflows/publish-pypi.yml
# uses trusted publishing to publish the package to PyPI and create a GitHub
# release as described here:
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: Publish to TestPyPI and PyPI and create GitHub release

on:
  push:
    tags:
      # only run workflow for tags in release format
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python 🐍
        uses: actions/setup-python@v6

      - name: Install uv 🌟
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 #v6.7.0

      - name: Build package for distribution 🛠️
        run: |
          uv build

      - name: Upload distribution packages 📤
        uses: actions/upload-artifact@v4
        with:
          name: package-distribution
          path: dist/

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    # publish only on tag pushes that aren't part of a scheduled workflow run
    if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyprefab
    permissions:
       id-token: write  # needed for trusted publishing (i.e., OIDC)

    steps:
    - name: Download distribution artifacts 📥
      uses: actions/download-artifact@v5
      with:
        name: package-distribution
        path: dist/
    - name: Publish distribution to PyPI 🚀
      uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e #v1.13.0

  github-release:
    name: >-
      Sign the Python distributions with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # required for creating GitHub Releases
      id-token: write  # required for sigstore

    steps:
    - name: Download distribution artifacts 📥
      uses: actions/download-artifact@v5
      with:
        name: package-distribution
        path: dist/
    - name: Sign the dists with Sigstore 📝
      uses: sigstore/gh-action-sigstore-python@f7ad0af51a5648d09a20d00370f0a91c3bdf8f84 #v3.0.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release 🛠️
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        "$GITHUB_REF_NAME"
        --repo "$GITHUB_REPOSITORY"
    - name: Upload artifact signatures to GitHub Release 📤
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish Python distribution to test PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi-test
      url: https://test.pypi.org/p/pyprefab
    permissions:
       id-token: write  # needed for trusted publishing (i.e., OIDC)

    steps:
    - name: Download distribution artifacts 📥
      uses: actions/download-artifact@v5
      with:
        name: package-distribution
        path: dist/
    - name: Publish distribution to test PyPI 🚀
      uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e #v1.13.0
      with:
        repository-url: https://test.pypi.org/legacy/
