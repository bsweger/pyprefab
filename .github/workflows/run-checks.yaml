name: Run checks

on:
  schedule:
    - cron: "17 3 * * *" # every day at 03:17 UTC
  workflow_dispatch:

permissions:
  contents: read

env:
  FORCE_COLOR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

jobs:
  generate-nox-sessions:
    name: Get nox session lists to use for matrices in other jobs
    runs-on: ubuntu-latest
    outputs:
      nox_test_dev_install: ${{ steps.set-matrix.outputs.nox_test_dev_install }}
      nox_test_pypi_install: ${{ steps.set-matrix.outputs.nox_test_pypi_install }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv 🌟
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Set nox session matrices 🧩
        id: set-matrix
        shell: bash
        run: |
          echo nox_test_dev_install=$(uvx nox --session test_dev_install --json -l | jq -c '[.[].session]') | tee --append $GITHUB_OUTPUT
          echo nox_test_pypi_install=$(uvx nox --session test_pypi_install --json -l | jq -c '[.[].session]') | tee --append $GITHUB_OUTPUT

  # Ensure package is installable from main branch
  test_dev_install:
    name: Test development install
    needs: generate-nox-sessions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nox_test_dev_install: ${{ fromJson(needs.generate-nox-sessions.outputs.nox_test_dev_install) }}
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv 🌟
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Run nox test_dev_install session ${{ matrix.nox_test_dev_install }} 🧪
        run: uvx nox --session ${{ matrix.nox_test_dev_install }}

  # Ensure package is installable via PyPI
  test_pypi_install:
    name: Test PyPI install
    needs: generate-nox-sessions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nox_test_pypi_install: ${{ fromJson(needs.generate-nox-sessions.outputs.nox_test_pypi_install) }}
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv 🌟
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Run nox test_pypi_install session ${{ matrix.nox_test_pypi_install }} 🧪
        run: uvx nox --session ${{ matrix.nox_test_pypi_install }}

  # Test build and deploy to Test PyPI
  test_pypi_build_deploy:
    uses: ./.github/workflows/publish-pypi.yaml
    name: Test build and deploy to Test PyPI
    permissions:
       id-token: write  # required for PyPI trusted publishing
