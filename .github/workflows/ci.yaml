name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  FORCE_COLOR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

jobs:
  generate-nox-sessions:
    name: Get nox session lists to use for matrices in other jobs
    runs-on: ubuntu-latest
    outputs:
      nox_tests: ${{ steps.set-matrix.outputs.session }}
      nox_docs: ${{ steps.set-matrix.outputs.docs }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv 🌟
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Set nox session matrices 🧩
        id: set-matrix
        shell: bash
        run: |
          echo nox_tests=$(uvx nox --session tests --json -l | jq -c '[.[].session]') | tee --append $GITHUB_OUTPUT
          echo nox_docs=$(uvx nox --session docs --json -l | jq -c '[.[].session]') | tee --append $GITHUB_OUTPUT

  lint:
    name: Lint and type check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv 🌟
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Lint 🧹
        run: uvx nox --session lint

      - name: Type Check 🧐
        run: uvx nox --session typecheck

  tests:
    name: Run tests
    needs: generate-nox-sessions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nox_test: ${{ fromJson(needs.generate-jobs.outputs.nox_tests) }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv 🌟
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Test with python ${{ matrix.nox_test }} 🧪
        run: uvx nox --session ${{ matrix.nox_test }}

  coverage:
    name: Generate coverage reports & fail if below threshold
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv 🌟
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 #v5.4.1

      - name: Generate coverage report 📊
        run: |
          uvx nox --session coverage >> $GITHUB_STEP_SUMMARY

      - name: Upload HTML report if coverage check fails 📤
        uses: actions/upload-artifact@v4
        with:
            name: html-cov-report
            path: htmlcov
        if: ${{ failure() }}
